<라즈베리파이4 초기설정>
■ sd카드를 pc나 데스크톱에 삽입한다.
■ raspberry pi OS 를 설치하고 imager를 통해 sd카드에 설치한다.
■ 무선 랜 wifi 설정을 위해 sd카드 boot 폴더에 ssh 파일과  wpa_supplicant.conf 파일을 생성한다.
■ wpa_supplicant.conf 파일 안에는 
country=US 
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev 
update_config=1 
network={ 
 ssid="WIFI 이름" 
 psk="WIFI 비밀번호" 
 scan_ssid=1 
}
내용을 넣는다. ssid 와 psk에는 본인에 공유기에 맞는 설정을 하면 된다.
■ sd카드를 pc나 데스크톱에서 뺀 뒤 라즈베리파이 모델에 꼽고 전원을 넣어준다.
■ pc로 본인 공유기 홈페이지에 접속한 뒤 새로 연결된 라즈베리파이의 ip를 확인하여 putty를 실행한다.
■ putty에 라즈베리파이가 접속된 ip를 입력하고 접속한다. 초기 아이디는 pi 초기 비밀번호는 raspberry이다.
■ sudo apt install xrdp를 입력하여 원격접속이 가능하도록 패키지를 설치한다.
■ 데스크톱에 '원격 데스크톱 연결'을 실행하고 라즈베리파이가 접속된 ip를 입력하여 로그인한다.

<라즈베리파이 카메라 설정>
■ 라즈베리파이 모델에 camera 어뎁터 부분에 라즈베리파이 카메라를 연결한다.
■ 원격 데스크톱 연결을 하고 sudo raspi-config 를 입력하여 설정 화면을 연다.
■ interfacing options에 들어가서 camera를 enabled로 바꿔준다.
■ 재부팅을 한다.
■ 터미널 창을 열고 raspistill -o test.jpg 를 통해 테스트 촬영을 한다.
■ picamera를 깔면 python을 통해 카메라를 실행 시킬 수 있다.

<tensorflowlite 객체인식 실행 명령어>
가상환경 실행 : source tensorfl-env/bin/activate
실시간 스트리밍 시작 : python3 TFLite_detection_webcam.py --modeldir=Sample_TFLite_model --edgetpu

<센서 구성>
■ 진동센서
vcc - 1, 3.3v
gnd - 6
do - gpio23

■ 브레이크 버튼(빨간 버튼)
vcc - 2, 5v
gnd - 20
out - gpio17

■ 핸들 왼쪽 버튼(초록색 버튼)
vcc - 17, 3.3v
gnd - 25
out - gpio27

■ 핸들 오른쪽 버튼(하얀색 버튼)
vcc - 4, 5v
gnd - 39
out - gpio22 

<주행영상 업로드 방식>
upload.py 파일에는 5분씩 끊어서 주행영상을 녹화하도록 파이썬 코드를 만들었다. 녹화본이 만들어짐과 동시에 파일은 자동으로 dondo.mp4 파일로 웹에 전송된다. 
영상을 자동으로 전송을 하기위해서는 nodejs를 사용했다. 만약 진동센서의 신호가 감지되어 사고발생을 감지했을 때에는 녹화가 종료되고 dondo_s.mp4파일로 웹에 전송된다.
영상이 웹에 전송될 때에는 txt파일로 사고발생이라는 문구와 핸들, 브레이크의 동작여부가 시간과 함께 전송된다.